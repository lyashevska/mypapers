# sequential conditional gaussian simulation on 500 m grid
# model silt+silt2+depth
# binomial and poisson
# all variables are scaled
set.seed(5021)
# load libraries
library(gstat)
library(geoR)
library(raster)
library(rgdal)
library(sp)
library(geoRglm)
library(ggplot2)
library(gstat)
library(pscl)
library(MASS)
# load custom functions
source("myfun/myfun.sep.R")
# if nsim=0 then kriging interpolation is done
# back transforming predictions
# christensen version poisson https://github.com/cran/geoRglm/blob/master/R/extensions.R
transf.predP<-function(var1.pred, var1.var){exp(var1.pred+0.5*var1.var)}
transf.varP<-function(var1.pred, var1.var){(exp(2*var1.pred+var1.var))*expm1(var1.var)}
# christensen version binomial https://github.com/cran/geoRglm/blob/master/R/binom.pred.R
### using second order taylor-expansion + facts for N(0,1) [third moment = 0 ; fourth moment = 12].
#plogis(x) == (1+ tanh(x/2))/2
#only for var1.pred<700
transf.predB<-function(var1.pred, var1.var){plogis(var1.pred) + 0.5*(exp(var1.pred)*(-expm1(var1.pred))/(1+exp(var1.pred))^3)*var1.var}
transf.varB<-function(var1.pred, var1.var){
(exp(var1.pred)/(1+exp(var1.pred))^2)^2*var1.var+(1/2)*(exp(var1.pred)*(-expm1(var1.pred))/(1+exp(var1.pred))^3)^2*var1.var^2}
# if nsim=1 (or output of glsm.mcmc) then conditional sequential gaussian simulation is performed
# back transforming is done using
antilogit<-function(x){exp(x)/(1+exp(x))} #for bin
#exp for poisson
myscale<-function(x){(x-mean(x))/sd(x)}
##----dat.sep
# read dat.rds
dat<-read.csv("input/dat.csv", header=T)
# remove 4 values in macoma >100
dat<-subset(dat, macoma<100)
dat<- subset(dat, select=c(macoma, silt, depth, x, y))
dat$silt2<-dat$silt^2
dat<-dat[c("macoma", "x", "y","silt", "silt2", "depth")]
# save mean and sd which I use for scaling
meancov<-apply(dat, 2, mean)
sdcov<-apply(dat, 2, sd)
dat<-cbind(dat[,c("macoma", "x", "y")],apply(dat[,c("silt", "silt2", "depth")], 2, myscale))
#datsc<-dat
#write.csv(datsc, "input/datsc.csv")
# model selection
#skip, use ecological model
datP<-dat
datB<-dat
datB$macoma<-ifelse(datB$macoma>0,1,0)
glmP <- glm(formula = macoma~silt+silt2+depth,
family = poisson(link=log),
data = datP)
summary(glmP)
glmP <- glm(formula = macoma~silt+silt2+depth,
family = poisson(link=log),
data = datP)
summary(glmP)
glmB <- glm(formula = macoma~silt+silt2+depth,
family = binomial,
data = datB)
summary(glmB)
glmB
glmP
glmB$residuals
glmP$residuals
plot(glmB$residuals, glmP$residuals)
cor(glmB$residuals, glmP$residuals)
plot(glmP$residuals, glmB$residuals)
cor(glmB$residuals, glmP$residuals)
cor(glmB$residuals, glmP$residuals)
plot(glmB$residuals, glmP$residuals)
pwd
pwd()
getwd()
rm(list=ls())
library(ggplot2)
library(reshape2)
library(grid)
library(sp)
library(rgdal)
# grid spacing
spacing<-2^seq(1,5,1)*100
# projection rijksdriehook
RD<-CRS("+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.2369,50.0087,465.658,-0.406857330322398,0.350732676542563,-1.8703473836068,4.0812 +units=m +no_defs")
antilogit<-function(x){exp(x)/(1+exp(x))} #for bin
#load R1 MCML results
load(file="./output/R1/results.RData")
mse.mu.mcml<-mse.mu[1:5,]
mse.pi.mcml<-mse.pi[1:5,]
# average over 100
mse.pi.mcml.avg<-rowMeans(mse.pi.mcml)
mse.pimu.mcml.avg<-rowMeans(mse.pi.mcml*mse.mu.mcml)
load(file="output/R2/results.RData")
mse.mu.reml1<-apply(se.mu,1,mean)
mse.pi.reml1<-apply(se.pi,1,mean)
#rm(list= ls()[!(ls() %in% c('mse.mu.reml1','mse.pi.reml1'))])
pr.pi.reml1<-pr.pi
pr.mu.reml1<-pr.mu
load(file="output/R3/results.RData")
mse.mu.reml2<-apply(se.mu,1,mean)
mse.pi.reml2<-apply(se.pi,1,mean)
pr.pi.reml2<-pr.pi
pr.mu.reml2<-pr.mu
load(file="output/R4/results.RData")
mse.mu.reml3<-apply(se.mu,1,mean)
mse.pi.reml3<-apply(se.pi,1,mean)
pr.pi.reml3<-pr.pi
pr.mu.reml3<-pr.mu
load(file="output/R5/results.RData")
mse.mu.reml4<-apply(se.mu,1,mean)
mse.pi.reml4<-apply(se.pi,1,mean)
pr.pi.reml4<-pr.pi
pr.mu.reml4<-pr.mu
load(file="output/R6/results.RData")
mse.mu.reml5<-apply(se.mu,1,mean)
mse.pi.reml5<-apply(se.pi,1,mean)
pr.pi.reml5<-pr.pi
pr.mu.reml5<-pr.mu
# load(file="output/R6/results.RData")
#rm(list= ls()[!(ls() %in% c('mse.mu.reml1','mse.pi.reml1', 'mse.mu.reml2','mse.pi.reml2', 'mse.mu.reml3','mse.pi.reml3','mse.mu.reml4','mse.pi.reml4'))])
# calculate avg over 5 reml runs, for papers
mse.pi.reml.avg<-colMeans(rbind(mse.pi.reml1,mse.pi.reml2, mse.pi.reml3, mse.pi.reml4, mse.pi.reml5))
mse.pimu.reml.avg<-colMeans(rbind(mse.pi.reml1*mse.mu.reml1,mse.pi.reml2*mse.mu.reml2, mse.pi.reml3*mse.mu.reml3, mse.pi.reml4*mse.mu.reml4, mse.pi.reml5*mse.mu.reml5))
### gg.intertidal
intertidal.shp<-readOGR("./input/intertidal", "intertidal")
intertidal.shp<-spTransform(intertidal.shp, RD)
gg.intertidal<-ggplot(intertidal.shp) +
geom_polygon(aes(x = long/1000, y = lat/1000, group=group), alpha=0.3)+
scale_y_continuous(name = "Northing (km)") + scale_x_continuous(name = "Easting (km)") + coord_equal()
###figure AbundanceRaw (1a)
df<-read.csv("input/dat.csv")
b<-c(-Inf,1,2, Inf)
l<-c("[0-1)","[1-2)", "[2-84)")
# colo<-c( "#FFFF00", "#7FC400", "#008B00")
# bpy.colors(n=3)
#colo<-c("#FFFF60FF", "#C729D6FF", "#000033FF")
colo<-c("#FFFFCC" , "#CC6600", "#000033FF")
#breaks for
df$group<-cut(df$macoma,breaks=b, labels=l)
png("fig/AbundanceRaw.png", width=700*3.125, height=350*3.125, res=300)
gg.intertidal+
geom_point(data = df, aes( x = x* 1.0e-3, y = y* 1.0e-3, colour=group),size=0.5)+
scale_colour_manual(name = "", values = colo)+
theme(legend.position="bottom", panel.background = element_rect(fill="white", color=NA),
panel.border = element_rect(colour = "grey50", fill=NA))+
guides(colour = guide_legend(override.aes = list(size=3)))
dev.off()
gg.intertidal+
geom_point(data = df, aes( x = x* 1.0e-3, y = y* 1.0e-3, colour=group),size=0.5)+
scale_colour_manual(name = "", values = colo)+
theme(legend.position="bottom", panel.background = element_rect(fill="white", color=NA),
panel.border = element_rect(colour = "grey50", fill=NA))+
guides(colour = guide_legend(override.aes = list(size=3)))
